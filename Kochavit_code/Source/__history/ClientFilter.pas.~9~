unit ClientFilter;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, GnrlFilter, DBTables, DB, StdCtrls, Buttons, ExtCtrls, Mask, edbcomps;

type
  TfrmClientFilter = class(TfrmGnrlFilter)
    lbACod: TLabel;
    lbZCod: TLabel;
    cbCod: TCheckBox;
    edACod: TMaskEdit;
    edZCod: TMaskEdit;
    lbAHp: TLabel;
    lbZHp: TLabel;
    cbHp: TCheckBox;
    edAHp: TMaskEdit;
    edZHp: TMaskEdit;
    lbAOpenDate: TLabel;
    lbZOpenDate: TLabel;
    edAOpenDate: TMaskEdit;
    edZOpenDate: TMaskEdit;
    cbOpenDate: TCheckBox;
    lbEIsuv: TLabel;
    cbIsuv: TCheckBox;
    edEIsuv: TEdit;
    qrFilterId: TIntegerField;
    qrFilterIdClient: TIntegerField;
    qrFilterHp: TIntegerField;
    qrFilterOpenDate: TDateField;
    qrFilterShem: TStringField;
    qrFilterBahalim1: TStringField;
    qrFilterTelB1: TStringField;
    qrFilterBahalim2: TStringField;
    qrFilterTelB2: TStringField;
    qrFilterKtovet: TStringField;
    qrFilterIsuv: TStringField;
    qrFilterMikud: TIntegerField;
    qrFilterTel1: TStringField;
    qrFilterTel2: TStringField;
    qrFilterFax: TStringField;
    qrFilterEMail: TStringField;
    qrFilterContact: TStringField;
    qrFilterTelC: TStringField;
    qrFilterAcounter: TStringField;
    qrFilterTelA: TStringField;
    qrFilterProfesion: TStringField;
    qrFilterTelP: TStringField;
    qrFilterZeutP: TIntegerField;
    qrFilterKtovetP: TStringField;
    qrFilterSizeP: TIntegerField;
    qrFilterPeriodPay: TSmallintField;
    qrFilterCreditPay: TSmallintField;
    qrFilterDept: TCurrencyField;
    qrFilterFreze: TBooleanField;
    lbEOved: TLabel;
    cbOved: TCheckBox;
    cbEOved: TComboBox;
    qrFilterOved: TStringField;
    lbADept: TLabel;
    lbZDept: TLabel;
    cbDepth: TCheckBox;
    edADept: TMaskEdit;
    edZDept: TMaskEdit;
    cbOfenPay: TCheckBox;
    Label1: TLabel;
    cbEOfenPay: TComboBox;
    qrFilterMovil: TStringField;
    qrFilterZeutM: TIntegerField;
    qrFilterOfenPay: TStringField;
    qrFilterCarNum: TIntegerField;
    qrFilterCarSum: TCurrencyField;
    procedure FormCreate(Sender: TObject);
    procedure cbCodClick(Sender: TObject);
    procedure edAOpenDateExit(Sender: TObject);
    procedure btnExecuteClick(Sender: TObject);
    procedure cbEOvedEnter(Sender: TObject);
    procedure cbEOfenPayEnter(Sender: TObject);
  private
    { Private declarations }
    procedure LoadPrfx;
    procedure LoadItemsInComboBox(Sender: TObject; pWhere: String);
  public
    { Public declarations }
  end;

var
  frmClientFilter: TfrmClientFilter;

implementation
uses
  ClientFilterDM, ClientReport, KbFunc;
{$R *.dfm}

procedure TfrmClientFilter.FormCreate(Sender: TObject);
begin
  inherited;
  dmClientFilter := TdmClientFilter.Create(Self);
end;

procedure TfrmClientFilter.cbCodClick(Sender: TObject);
begin
  inherited;
  SetCtrlState(((Sender as TCheckBox).Parent as TGroupBox),
    (Sender as TCheckBox).Checked, (Sender as TCheckBox).Top);
end;

procedure TfrmClientFilter.LoadItemsInComboBox(Sender: TObject; pWhere: String);
var
  vName: String;
  ListItem: TStringList;
begin
  vName := Copy(TComboBox(Sender).Name, 4, 15);
  ListItem := TStringList.Create;
  try
    TComboBox(Sender).Clear;
    dmClientFilter.LoadItems('KTbl'+vName, vName, pWhere, ListItem);
    TComboBox(Sender).Items.AddStrings(ListItem);
  finally
    ListItem.Free;
  end;
end;

procedure TfrmClientFilter.cbEOvedEnter(Sender: TObject);
begin
  inherited;
  LoadItemsInComboBox(Sender, '');
end;

procedure TfrmClientFilter.cbEOfenPayEnter(Sender: TObject);
begin
  inherited;
  LoadItemsInComboBox(Sender, '');
end;

procedure TfrmClientFilter.edAOpenDateExit(Sender: TObject);
begin
  inherited;
  if ((Sender as TMaskEdit).Text <> '  /  /    ') and
       (ValidDate((Sender as TMaskEdit).Text) = False) then
       (Sender as TMaskEdit).SetFocus
   else if (Copy((Sender as TMaskEdit).Name, 0, 3) = 'edZ') then
       if (CompareDate(edAOpenDate.Text,
               edZOpenDate.Text) = False) then
           edAOpenDate.SetFocus;
end;

procedure TfrmClientFilter.btnExecuteClick(Sender: TObject);
begin
  inherited;
  if not Assigned(frmClientReport) then
  begin
    with dmClientFilter do
    begin
      SetTotalRec('KClient');
      SqlState.EmptyPropertyes;
      SqlState.SelectAndFrom.LoadFromFile(ExtractFilePath(Application.ExeName)+
          'SQL\ClientFilter.SQL');
      SqlState.SplitHeader;
      SqlState.Where := GetWhereState;
      SqlState.Order := 'Shem';
      SqlState.GroupBy := 'Cl.Id';
      if OpenData then
        frmClientReport := TfrmClientReport.Create(Self);
    end;
  end;
end;


procedure TfrmClientFilter.LoadPrfx;
begin
  prfxList.Add('Cl.');
  prfxList.Add('tV.');
  prfxList.Add('tP.');
end;

end.
