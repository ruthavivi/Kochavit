unit TblOved;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, GnrlTbl, ActnList, DB, ImgList, Grids, DBGrids,
  ExtCtrls, ComCtrls, StdCtrls, DBCtrls, ToolWin, MyChkDBGrid, edbcomps, StdActns,
  frxClass, frxDBSet, System.Actions, System.ImageList;

type
  TfrmOvedTbl = class(TfrmGnrlTbl)
    tbTblID: TAutoIncField;
    tbTblOved: TStringField;
    frdbOved: TfrxDBDataset;
    tbTblUserName: TStringField;
    tbTblUser_Password: TStringField;
    tbTblUser_Role: TStringField;
    Edit: TEdit;
    procedure acPrintExecute(Sender: TObject);
    procedure acDeleteExecute(Sender: TObject);
    procedure dbGridDrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmOvedTbl: TfrmOvedTbl;

implementation

{$R *.dfm}

procedure TfrmOvedTbl.acDeleteExecute(Sender: TObject);
begin
  if KeepIntegrity('OvedId', tbTblId.AsString, ['KCar']) then
    inherited;
end;

procedure TfrmOvedTbl.acPrintExecute(Sender: TObject);
begin
  inherited;
  PrintReport('rpOved');
end;

procedure TfrmOvedTbl.dbGridDrawColumnCell(Sender: TObject; const Rect: TRect;
  DataCol: Integer; Column: TColumn; State: TGridDrawState);
var
  grid : TDBGrid;
  maskValue : String;
  aRect : TRect;
begin
  inherited;
  maskValue := '**';
  aRect := Rect;
  grid := sender as TDBGrid;

  if column.FieldName = 'User_password' then
    if gdfocused in State then
    begin
      Edit1.Left := Rect.Left + grid.Left + 1;
      Edit1.Top  := rect.Top + grid.Top + 1;
      Edit1.Width := Rect.Right - Rect.Left + 2;
      Edit1.Height := Rect.Bottom - Rect.Top + 2;
      Edit1.Clear;
      Edit1.Visible := True;
    end
    else
    begin
      grid.Canvas.FillRect(Rect);
      DrawText(grid.Canvas.Handle, PChar(maskValue), Length(maskValue), aRect,
        DT_SINGLELINE or DT_LEFT or DT_VCENTER);
    end
    else
      grid.DefaultDrawColumnCell(Rect, DataCol, Column, state);

end;


