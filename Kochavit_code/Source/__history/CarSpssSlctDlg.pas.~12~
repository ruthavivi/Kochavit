unit CarSpssSlctDlg;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, GnrlSpssSlctDlg, DB, DBTables, Spin, StdCtrls, Buttons,
  ExtCtrls, HeiterSpssSlctDlg, RpConDS, RpConBDE, RpCon, RpBase, RpSystem,
  RpDefine, RpRave, RpRender, RpRenderRTF, edbcomps, RpRenderHTML,
  GnrlRprtSlctDlg, frxClass, frxDBSet;

type
  TfrmCarSpssSlctDlg = class(TfrmGnrlSpssSlctDlg)
    ccChartsCar: TRvCustomConnection;
    frdbCar: TfrxDBDataset;
    procedure FormCreate(Sender: TObject);
    procedure btnPrintClick(Sender: TObject);
    procedure ccChartsCarGetCols(Connection: TRvCustomConnection);
    procedure ccChartsCarGetRow(Connection: TRvCustomConnection);
  private
    procedure SetChart(pLabel, pCmt: String);
  public
    { Public declarations }
  end;

var
  frmCarSpssSlctDlg: TfrmCarSpssSlctDlg;

implementation

{$R *.dfm}
uses
   CarFilterDM, RPTChart, GnrlSpssChart;

procedure TfrmCarSpssSlctDlg.FormCreate(Sender: TObject);
begin
  inherited;
  LoadRprtItems('CS');
end;

procedure TfrmCarSpssSlctDlg.btnPrintClick(Sender: TObject);
begin
  inherited;
  LoadSpssSql(dmCarFilter.qrFilter.SQL.Text);
  qrSpss.Open;
  try
    if ((Sender as TBitBtn).Name = 'btnPrint') then
      PrintReport(dmCarFilter.qrFilter.RecordCount, '0')
    else
      PreviewReport(dmCarFilter.qrFilter.RecordCount, '0');
  finally
    qrSpss.Close;
  end;

//  Screen.Cursor := crHourGlass;
//  try
//    SetTotals(IntToStr(dmCarFilter.qrFilter.RecordCount), '');
//    LoadSpssSql(dmCarFilter.qrFilter.SQL.Text);
//    qrSpss.Open;
//    frmChart := TfrmChart.Create(Self);
//    SetChart(qrSpss.Fields[0].FieldName, 'Num');
//    ExecuteRprt('', Copy((Sender as TBitBtn).Name, 4, 7));
//  finally
//    qrSpss.Close;
//    frmChart.Free;
//    Screen.Cursor := crDefault;
//  end;
end;

procedure TfrmCarSpssSlctDlg.ccChartsCarGetCols(
  Connection: TRvCustomConnection);
begin
  inherited;
  Connection.WriteField('ChartCar', dtGraphic, 30, '', '');
end;

procedure TfrmCarSpssSlctDlg.ccChartsCarGetRow(
  Connection: TRvCustomConnection);
begin
  inherited;
  WriteChartData(Connection, frmChart.dcChart);
end;

procedure TfrmCarSpssSlctDlg.SetChart(pLabel, pCmt: String);
begin
  frmChart.dcChart.Series[0].DataSource := qrSpss;
  frmChart.dcChart.Series[0].XLabelsSource := pLabel;
  frmChart.dcChart.Series[0].YValues.ValueSource := pCmt;
end;

end.
