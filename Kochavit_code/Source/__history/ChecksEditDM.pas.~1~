unit ChecksEditDM;

interface

uses
  Windows, SysUtils, Classes, Graphics, Controls, Dialogs, GnrlEditDM, RpBase,
  RpSystem, RpDefine, RpRave, DBTables, DB;

type
  TdmChecksEdit = class(TdmGnrlEdit)
    tbChecks: TTable;
    tbChecksId: TAutoIncField;
    tbChecksClientId: TIntegerField;
    tbChecksBankId: TSmallintField;
    tbChecksAcount: TIntegerField;
    tbChecksCheckNo: TIntegerField;
    tbChecksCheckSum: TCurrencyField;
    tbChecksAfkadaD: TDateField;
    tbChecksPidyonD: TDateField;
    tbChecksBill: TIntegerField;
    tbChecksKabala: TIntegerField;
    tbCheckslkpBank: TStringField;
    dsChecks: TDataSource;
    tbTblBank: TTable;
    RvProject1: TRvProject;
    dbChecksEdit: TDatabase;
    procedure DataModuleCreate(Sender: TObject);
    procedure tbChecksNewRecord(DataSet: TDataSet);
    procedure DataModuleDestroy(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  dmChecksEdit: TdmChecksEdit;

implementation
uses
   MainDM, LogErrorUtil;
{$R *.dfm}

procedure TdmChecksEdit.DataModuleCreate(Sender: TObject);
begin
  inherited;
  try
    tbChecks.Open;
  except
    on E: EDatabaseError do
    begin
      HandelError('!!! קיים קובץ לא תקין' + #10#13 + E.Message, E);
      Self.Destroy;
    end;
  end;
end;

procedure TdmChecksEdit.tbChecksNewRecord(DataSet: TDataSet);
begin
  inherited;
  with qrGnrl do
  begin
    Open;
    if not IsEmpty then
    begin
      Last;
      tbChecksBankId.AsInteger := FieldByName('BankId').AsInteger;
      tbChecksAcount.AsInteger := FieldByName('Acount').AsInteger;
      tbChecksCheckNo.AsInteger := FieldByName('CheckNo').AsInteger +1;
      tbChecksCheckSum.AsCurrency := FieldByName('CheckSum').AsCurrency;
      tbChecksAfkadaD.AsDateTime := FieldByName('AfkadaD').AsDateTime;
      tbChecksPidyonD.AsDateTime := IncMonth(FieldByName('PidyonD').AsDateTime, 1);
      tbChecksBill.AsInteger := FieldByName('Bill').AsInteger;
      tbChecksKabala.AsInteger := FieldByName('Kabala').AsInteger;
    end;
    Close;
  end;
end;

procedure TdmChecksEdit.DataModuleDestroy(Sender: TObject);
begin
  inherited;
  dbChecksEdit.Connected := False;
end;

end.
