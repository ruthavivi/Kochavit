unit Default;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Buttons, Mask, DBCtrls, DB, ExtCtrls,
  ComCtrls, Spin, edbcomps, Vcl.ExtActns, System.Actions, Vcl.ActnList,
  Vcl.StdActns;

type
  TfrmDefault = class(TForm)
    Panel1: TPanel;
    dsDefault: TDataSource;
    btnCancel: TBitBtn;
    btnSave: TBitBtn;
    PageControl1: TPageControl;
    TabSheet1: TTabSheet;
    TabSheet2: TTabSheet;
    GroupBox1: TGroupBox;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    edCodHevra: TDBEdit;
    edShem: TDBEdit;
    edOved: TDBLookupComboBox;
    GroupBox2: TGroupBox;
    Label4: TLabel;
    SpinEdit1: TSpinEdit;
    Label5: TLabel;
    SpinEdit2: TSpinEdit;
    Label6: TLabel;
    Label7: TLabel;
    TabSheet3: TTabSheet;
    GroupBox3: TGroupBox;
    Label8: TLabel;
    edHost: TDBEdit;
    Label10: TLabel;
    edUserName: TDBEdit;
    btnSelectScan: TButton;
    Label11: TLabel;
    edNextNoBkr: TDBEdit;
    Label12: TLabel;
    edUserPass: TDBEdit;
    Label13: TLabel;
    SpinEdit3: TSpinEdit;
    Label14: TLabel;
    tbDefault: TEDBTable;
    tbDefaultId: TIntegerField;
    tbDefaultlkpOved: TStringField;
    tbDefaultOvedId: TSmallintField;
    tbDefaultCodHevra: TStringField;
    tbDefaultShem: TStringField;
    tbDefaultDayWrn: TSmallintField;
    tbDefaultDayChk: TSmallintField;
    tbDefaultNextNoBkr: TSmallintField;
    tbDefaultHost: TStringField;
    tbDefaultUserName: TStringField;
    tbDefaultUserPass: TStringField;
    tbDefaultSupportEMail: TStringField;
    tbDefaultSendReport: TBooleanField;
    tbDefaultScanerId: TSmallintField;
    tbDefaultMonthLmt: TSmallintField;
    tbTblOved: TEDBTable;
    tbDefaultEmailComp: TStringField;
    tbDefaultPort: TStringField;
    tbDefaultAuthType: TIntegerField;
    tbDefaultFrom: TStringField;
    tbDefaultSignature: TMemoField;
    Label15: TLabel;
    dbcEmailComp: TDBComboBox;
    Label16: TLabel;
    edPort: TDBEdit;
    Label17: TLabel;
    dbcAuthType: TDBComboBox;
    Label18: TLabel;
    dbFrom: TDBEdit;
    TabSheet4: TTabSheet;
    GroupBox5: TGroupBox;
    Label19: TLabel;
    Label20: TLabel;
    tbDefaultHeader: TMemoField;
    Label9: TLabel;
    edSupportEMail: TDBEdit;
    edSendReport: TDBCheckBox;
    edHeader: TDBRichEdit;
    edSignature: TDBRichEdit;
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnSaveClick(Sender: TObject);
    procedure btnCancelClick(Sender: TObject);
    procedure edOvedKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure btnSelectScanClick(Sender: TObject);
    procedure tbDefaultAuthTypeGetText(Sender: TField; var Text: string;
      DisplayText: Boolean);
    procedure tbDefaultAuthTypeSetText(Sender: TField; const Text: string);
    procedure dbcEmailCompChange(Sender: TObject);
    procedure dbcAuthTypeChange(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmDefault: TfrmDefault;

implementation
uses
  LogErrorUtil, EnScan, DialogsHeb;
{$R *.dfm}

procedure TfrmDefault.FormCreate(Sender: TObject);
begin
  try
    tbDefault.Open;
    tbTblOved.Open;
  except
    on E: EDatabaseError do
    begin
      tbTblOved.Close;
      tbDefault.Close;
      HandelError('TfrmDefault.FormCreate', '!!! קיים קובץ לא תקין' + #10#13 + E.Message, E);
      Self.Destroy;
    end;
  end;
  SpinEdit1.Value := tbDefaultDayWrn.AsInteger;
  SpinEdit2.Value := tbDefaultDayChk.AsInteger;
  SpinEdit3.Value := tbDefaultMonthLmt.AsInteger;
end;

procedure TfrmDefault.tbDefaultAuthTypeGetText(Sender: TField; var Text: string;
  DisplayText: Boolean);
begin
  if Sender.AsInteger = 1 then
    Text := 'satNone'
  else if Sender.AsInteger = 2 then
    Text := 'satDefault'
  else if Sender.AsInteger = 3 then
    Text := 'satSASL';
end;

procedure TfrmDefault.tbDefaultAuthTypeSetText(Sender: TField;
  const Text: string);
begin
  if Text = 'satNone' then
    Sender.AsInteger := 1
  else if Text = 'satDefault' then
    Sender.AsInteger := 2
  else if Text = 'satSASL' then
    Sender.AsInteger := 3;
end;

procedure TfrmDefault.dbcEmailCompChange(Sender: TObject);
begin
  if dbcEmailComp.Text = 'GMail' then
  begin
    edHost.Text := 'smtp.gmail.com';
    edHost.Enabled := False;
    edPort.Text := '587';
    edPort.Enabled := False;
    dbcAuthType.Text := 'satDefault';
    dbcAuthType.Enabled := False;
  end
  else if dbcEmailComp.Text = 'SMTP' then
  begin
    edPort.Text := '25';
    edPort.Enabled := False;
    dbcAuthType.Text := 'satNone';
    dbcAuthType.Enabled := False;
  end;
end;

procedure TfrmDefault.dbcAuthTypeChange(Sender: TObject);
begin
  if dbcAuthType.Text = 'satNone' then
  begin
    edUserName.Enabled := False;
    edUserPass.Enabled := False;
  end;
end;

procedure TfrmDefault.edOvedKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if (Key = VK_Delete) then
  begin
    tbDefault.Edit;
    tbDefault.FieldByName('OvedId').Clear;
  end;
end;

procedure TfrmDefault.btnSelectScanClick(Sender: TObject);
begin
  if not Scanner.IsConfigured then
  begin
    MessageDlgH('לא נימצאה סורק מותקן במחשב', mtError, [mbYes], 0, 0);
    Exit;
  end;
  Scanner.SelectScanner;
end;

procedure TfrmDefault.btnSaveClick(Sender: TObject);
begin
  tbDefault.Edit;
  tbDefaultDayWrn.AsInteger := SpinEdit1.Value;
  tbDefaultDayChk.AsInteger := SpinEdit2.Value;
  tbDefaultMonthLmt.AsInteger := SpinEdit3.Value;
  tbDefault.Post;
  Close;
end;

procedure TfrmDefault.btnCancelClick(Sender: TObject);
begin
  tbDefault.Cancel;
  Close;
end;

procedure TfrmDefault.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  tbTblOved.Close;
  tbDefault.Close;
  Action := caFree;
end;

end.
