unit BillSpssSlctDlg;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, GnrlSpssSlctDlg, edbcomps, DB, RpRave, RpDefine, RpBase, RpSystem,
  Spin, StdCtrls, Buttons, ExtCtrls, RpCon, RpConDS, frxClass, frxDBSet,
  RpRender, RpRenderHTML;

type
  TfrmBillSpssSlctDlg = class(TfrmGnrlSpssSlctDlg)
    ccChartsBill: TRvCustomConnection;
    frdbBills: TfrxDBDataset;
    procedure FormCreate(Sender: TObject);
    procedure btnPrintClick(Sender: TObject);
    procedure ccChartsBillGetCols(Connection: TRvCustomConnection);
    procedure ccChartsBillGetRow(Connection: TRvCustomConnection);
  private
    procedure SetChart(pLabel, pCmt: String);
  public
    { Public declarations }
  end;

var
  frmBillSpssSlctDlg: TfrmBillSpssSlctDlg;

implementation
uses
   BillFilterDM, RPTChart, GnrlSpssChart;

{$R *.dfm}

procedure TfrmBillSpssSlctDlg.FormCreate(Sender: TObject);
begin
  inherited;
  LoadRprtItems('BS');
end;

procedure TfrmBillSpssSlctDlg.btnPrintClick(Sender: TObject);
begin
  inherited;
  LoadSpssSql(dmBillFilter.qrFilter.SQL.Text);
  qrSpss.Open;
  try
    if ((Sender as TBitBtn).Name = 'btnPrint') then
      PrintReport(dmBillFilter.qrFilter.RecordCount, dmBillFilter.GetTotalSum)
    else
      PreviewReport(dmBillFilter.qrFilter.RecordCount, dmBillFilter.GetTotalSum);
  finally
    qrSpss.Close;
  end;
end;

procedure TfrmBillSpssSlctDlg.ccChartsBillGetCols(
  Connection: TRvCustomConnection);
begin
  inherited;
  Connection.WriteField('ChartBill', dtGraphic, 30, '', '');
end;

procedure TfrmBillSpssSlctDlg.ccChartsBillGetRow(
  Connection: TRvCustomConnection);
begin
  inherited;
  WriteChartData(Connection, frmChart.dcChart);
end;

procedure TfrmBillSpssSlctDlg.SetChart(pLabel, pCmt: String);
begin
  frmChart.dcChart.Series[0].DataSource := qrSpss;
  frmChart.dcChart.Series[0].XLabelsSource := pLabel;
  frmChart.dcChart.Series[0].YValues.ValueSource := pCmt;
end;

end.
