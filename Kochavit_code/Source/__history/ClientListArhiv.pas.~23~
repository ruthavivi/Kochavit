unit ClientListArhiv;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, GnrlListArhiv, DBActns, ActnList, ImgList, DB, Grids, DBGrids,
  ExtCtrls, StdCtrls, Mask, ComCtrls, Buttons, ToolWin, StdActns, edbcomps, edberror;

type
  TfrmClientListArhiv = class(TfrmGnrlListArhiv)
    WindowClose: TWindowClose;
    acEdit: TAction;
    procedure FormCreate(Sender: TObject);
    procedure DBGridTitleClick(Column: TColumn);
    procedure edSearchChange(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure acSibaExecute(Sender: TObject);
    procedure acReturnExecute(Sender: TObject);
    procedure acDeleteExecute(Sender: TObject);
    procedure acEditExecute(Sender: TObject);
  private
    procedure UpdateStatusBar;
    procedure OpenRecord(pState: Boolean);
  public
    { Public declarations }
  end;

var
  frmClientListArhiv: TfrmClientListArhiv;

implementation
uses
  MainDM, ClientListArhivDM, CauseMsg, DialogsHeb, ClientEditDM, ClientEdit,
  LogErrorUtil;

{$R *.dfm}

procedure TfrmClientListArhiv.FormCreate(Sender: TObject);
begin
  inherited;
  dmClientListArhiv := TdmClientListArhiv.Create(Self);
  LoadColOrder(DBGrid, 'ClientListArhiv');
  MarkIndexColumn(dmClientListArhiv.ClientOrder);
  UpdateStatusBar;
end;

procedure TfrmClientListArhiv.UpdateStatusBar;
begin
  StatusBar.Panels[0].Text := 'סה"כ חברות: ' + dmClientListArhiv.ClnRecNo;
end;

procedure TfrmClientListArhiv.DBGridTitleClick(Column: TColumn);
begin
  inherited;
  dmClientListArhiv.ClientOrder := Column.FieldName;
  dmClientListArhiv.ReOpenTable(dmClientListArhiv.qrList.FieldByName('Id').AsInteger);
  MarkIndexColumn(Column.FieldName);
  edSearch.SetFocus;
end;

procedure TfrmClientListArhiv.edSearchChange(Sender: TObject);
begin
  inherited;
  dmClientListArhiv.qrList.Locate(dmClientListArhiv.ClientOrder, SearchVal, [loPartialKey]);
end;

procedure TfrmClientListArhiv.acSibaExecute(Sender: TObject);
begin
  inherited;
  dmClientListArhiv.qrGnrl.SQL.Text := 'SELECT Moed, CauseCl FROM KClSiba Cs ' +
          'LEFT JOIN KTblCause tC ON Cs.SibaId = tC.Id '+
          'WHERE OwnerId = ' + dmClientListArhiv.qrList.FieldByName('Id').AsString;
  frmCauseMsg := TfrmCauseMsg.Create(Self);
  try
    dmClientListArhiv.qrGnrl.Open;
    if not dmClientListArhiv.qrGnrl.IsEmpty then
    begin
      frmCauseMsg.lbMoed.Caption := 'תאריך העברה: ' +
            dmClientListArhiv.qrGnrl.FieldByName('Moed').AsString;
      frmCauseMsg.lbSiba.Caption := 'סיבת העברה: ' +
            dmClientListArhiv.qrGnrl.FieldByName('CauseCl').AsString;
      frmCauseMsg.ShowModal;
    end;
  finally
    frmCauseMsg.Free;
    dmClientListArhiv.qrGnrl.Open;
  end;
end;

procedure TfrmClientListArhiv.acReturnExecute(Sender: TObject);
begin
  inherited;
  if (MessageDlgH('להחזיר את החברה ' +
      dmClientListArhiv.qrList.FieldByName('Shem').AsString + ' לרשימה הפעילה',
      mtConfirmation, mbYesNoCancel, 0, 0) = mrYes) then
  begin
    dmClientListArhiv.qrGnrl.SQL.Text := 'UPDATE KClient SET Pail = True ' +
            'WHERE Id = ' + dmClientListArhiv.qrList.FieldByName('Id').AsString;
    dmClientListArhiv.qrGnrl.ExecSQL;
    dmClientListArhiv.qrGnrl.SQL.Text := 'DELETE FROM KClSiba ' +
            'WHERE OwnerId = ' + dmClientListArhiv.qrList.FieldByName('Id').AsString;
    dmClientListArhiv.qrGnrl.ExecSQL;
    dmClientListArhiv.qrList.Refresh;
    dmMain.qrClientList.Refresh;
    UpdateStatusBar;
  end;
end;

procedure TfrmClientListArhiv.acDeleteExecute(Sender: TObject);
begin
  inherited;
  if (MessageDlgH('למחוק סופית חברה ' +
          dmClientListArhiv.qrList.FieldByName('Shem').AsString,
          mtConfirmation, mbYesNoCancel, 0, 0) = mrYes) then
  begin
    dmClientListArhiv.qrGnrl.SQL.Text := 'DELETE FROM KClient ' +
            'WHERE Id = ' + dmClientListArhiv.qrList.FieldByName('Id').AsString;
    dmClientListArhiv.qrGnrl.ExecSQL;
    dmClientListArhiv.qrList.Refresh;
    UpdateStatusBar;
  end;
end;


procedure TfrmClientListArhiv.acEditExecute(Sender: TObject);
begin
  inherited;
  OpenRecord(False);
end;

procedure TfrmClientListArhiv.OpenRecord(pState: Boolean);
begin
  if not Assigned(frmClientEdit) then
  begin
    try
      dmClientEdit := TdmClientEdit.Create(Self);
      dmClientEdit.SetDataState(pState,
          dmClientListArhiv.qrList.FieldByName('Id').AsInteger);
      frmClientEdit := TfrmClientEdit.Create(Self);
      frmClientEdit.acSave.Enabled := False;
    except on E: Exception do
      begin
        if (E is EEDBError) then
        begin
          if (EEDBError(E).ErrorCode = EDB_ERROR_LOCKROW) then
            MessageDlgH('כרטיס פתוח ע"י משתמש אחר', mtError, [mbOK], 0, 0)
          else
            HandelError('TfrmeClientsList.OpenRecord', '!!! קיים קובץ לא תקין' + #10#13 + E.Message, E);
        end;
      end;
    end;
  end;
end;

procedure TfrmClientListArhiv.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  SaveColOrder(DBGrid, 'ClientListArhiv');
  dmClientListArhiv.Free;
  inherited;
  frmClientListArhiv := nil;
end;

end.
