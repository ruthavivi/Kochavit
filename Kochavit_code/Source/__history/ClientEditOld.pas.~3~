unit ClientEditOld;

interface

uses
  Windows, SysUtils, Classes, Controls, Forms, Dialogs, GnrlEdit, DBTables,
  DB, ImgList, Menus, ActnList, ComCtrls, StdCtrls, ToolWin, Buttons, ExtCtrls,
  DBCtrls, ExtDlgs,  DBActns, Grids, DBGrids, Mask, StdActns;

type
  TfrmClientEditOld = class(TfrmGnrlEdit)
    Panel2: TPanel;
    GroupBox1: TGroupBox;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Label16: TLabel;
    Label17: TLabel;
    Label18: TLabel;
    Label23: TLabel;
    Label29: TLabel;
    edIdClient: TDBEdit;
    edShem: TDBEdit;
    edEMail: TDBEdit;
    edKtovet: TDBEdit;
    edIsuv: TDBEdit;
    edTel1: TDBEdit;
    edTel2: TDBEdit;
    edFax: TDBEdit;
    edKtovetP: TDBEdit;
    edSizeP: TDBEdit;
    edMikud: TDBEdit;
    edHp: TDBEdit;
    edOpenDate: TDBEdit;
    Panel3: TPanel;
    GroupBox2: TGroupBox;
    Label9: TLabel;
    Label10: TLabel;
    Label11: TLabel;
    Label12: TLabel;
    Label13: TLabel;
    Label14: TLabel;
    Label15: TLabel;
    Label19: TLabel;
    Label20: TLabel;
    Label21: TLabel;
    Label22: TLabel;
    Label28: TLabel;
    edBahalim1: TDBEdit;
    edTelB1: TDBEdit;
    edBahalim2: TDBEdit;
    edTelB2: TDBEdit;
    edContact: TDBEdit;
    edTelC: TDBEdit;
    edProfesion: TDBEdit;
    edTelP: TDBEdit;
    edAcounter: TDBEdit;
    edTelA: TDBEdit;
    edRemark: TDBMemo;
    edZeutP: TDBEdit;
    Label30: TLabel;
    Label31: TLabel;
    Label32: TLabel;
    Label33: TLabel;
    edPeriodPay: TDBEdit;
    edCreditPay: TDBEdit;
    Label24: TLabel;
    Label25: TLabel;
    edMovil: TDBEdit;
    edZeutM: TDBEdit;
    Panel4: TPanel;
    GroupBox3: TGroupBox;
    ToolBar2: TToolBar;
    ToolButton1: TToolButton;
    DBGrid1: TDBGrid;
    acFollowDelete: TDataSetDelete;
    procedure FormCreate(Sender: TObject);
    procedure acSaveExecute(Sender: TObject);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure acMailExecute(Sender: TObject);
    procedure acShowScanExecute(Sender: TObject);
    procedure DBGrid1KeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmClientEditOld: TfrmClientEditOld;

implementation

{$R *.dfm}
uses
   MainDMOld, ClientEditOldDM, ShowScan, DocUtils;

procedure TfrmClientEditOld.FormCreate(Sender: TObject);
begin
  inherited;
  dmClientEditOld := TdmClientEditOld.Create(Self);
  LoadPosition('\Software\Kochavit\ClientEditOld');
end;

procedure TfrmClientEditOld.acMailExecute(Sender: TObject);
var
   WorkFile, nCopy: OleVariant;
   vPath, vButton, vMemo: String;
   vSave: Boolean;
   OneDoc: TDocUtils;
begin
  inherited;
  vPath := ExtractFilePath(Application.ExeName) + 'Docs\';
  vSave := True;
  if SelectDoc(WorkFile, nCopy, vButton, vMemo, vPath, vSave) then
  begin
    try
      Screen.Cursor := crHourGlass;
      OneDoc := TDocUtils.Create(vButton, nCopy, vSave, 'הודעה לחברה',
        dmMainOld.tbClientOldFax.AsString, dmMainOld.tbClientOldEMail.AsString,
          WorkFile);
      OneDoc.SendDoc(dmMainOld.tbClientOld, nil);
      if vSave and (vButton = 'btnPrint') then
        dmClientEditOld.SaveTofes(ChangeFileExt(ExtractFileName(WorkFile), ''),
            vPath+'ScanDoc\Temp.Doc', 'Doc');
    finally
      OneDoc.Free;
      Screen.Cursor := crDefault;
    end;
  end;
end;

procedure TfrmClientEditOld.acShowScanExecute(Sender: TObject);
var
  tmpFile: String;
begin
  inherited;
  frmShowScan := TfrmShowScan.Create(Self);
  try
    frmShowScan.dsTofes.DataSet := dmClientEditOld.tbTofes;
    dmClientEditOld.tbTofes.Open;
    if (frmShowScan.ShowModal = mrYes) then
    begin
      tmpFile := ExtractFilePath(Application.ExeName) +
          'Docs\ScanDoc\Temp.' + dmClientEditOld.tbTofesExt.AsString;
      dmClientEditOld.tbTofesTofes.SaveToFile(tmpFile);
      frmShowScan.ShowFile(tmpFile);
    end;
  finally
    dmClientEditOld.tbTofes.Close;
    frmShowScan.Free;
  end;
end;

procedure TfrmClientEditOld.DBGrid1KeyPress(Sender: TObject; var Key: Char);
begin
  if (Key = Char(VK_RETURN)) then
    if (dmClientEditOld.dsClFollow.State in dsEditModes) then
      dmClientEditOld.tbClFollow.Post;
end;

procedure TfrmClientEditOld.acSaveExecute(Sender: TObject);
begin
   dmMainOld.tbClientOld.Post;
   Close;
  inherited;
end;

procedure TfrmClientEditOld.FormCloseQuery(Sender: TObject;
  var CanClose: Boolean);
begin
  inherited;
   with dmMainOld.tbClientOld do
   begin
       if Modified then
            case MessageDlg('קימים נתונים חדשים בכרטיס. האם לשמור?',
               mtConfirmation, [mbYes, mbNo, mbCancel], 0) of
                   id_Yes: Post;
                   id_No: Cancel;
                   id_Cancel: CanClose := False;
           end
       else
           Cancel;
   end;
end;

procedure TfrmClientEditOld.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  SavePosition('\Software\Kochavit\ClientEditOld');
  dmClientEditOld.Free;
  inherited;
  frmClientEditOld := nil;
end;


end.
